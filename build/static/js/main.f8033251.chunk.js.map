{"version":3,"sources":["components/RecordList.jsx","services/recordService.jsx","index.js"],"names":["RecordList","records","deleteRecord","map","record","name","number","onClick","id","baseUrl","axios","get","then","response","data","newRecord","post","newData","put","delete","App","useState","setRecords","setName","setNumber","filterValue","setFilterValue","statusMessage","setStatusMessage","window","confirm","recordService","filter","each","catch","error","updateStatusMessage","recordFactory","numberFromState","Array","from","toString","splice","join","className","class","message","Error","setTimeout","useEffect","placeholder","value","onChange","event","preventDefault","target","onSubmit","some","toLowerCase","tempObj","recordToUpdate","includes","updateRecord","Math","floor","random","returnedRecord","concat","maxLength","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAmBeA,EAjBI,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAC5B,OACE,6BAEED,EAAQE,KAAI,SAAAC,GAAM,OAChB,+BACGA,EAAOC,KADV,IACiBD,EAAOE,OACtB,wBAAQC,QAAS,kBAAML,EAAaE,EAAOI,GAAIJ,EAAOC,OAAtD,sBAFOD,EAAOC,Y,gBCNlBI,EAAU,cAmBD,EAhBI,WACjB,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAevC,EAZM,SAAAC,GACnB,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWnD,EARM,SAACN,EAAIS,GACxB,OAAOP,IAAMQ,IAAN,UAAaT,EAAb,YAAwBD,GAAMS,GAASL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO3D,EAJM,SAACN,GACpB,OAAQE,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BD,KCX/BY,G,MAAM,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRpB,EADQ,KACCqB,EADD,OAEUD,mBAAS,IAFnB,mBAERhB,EAFQ,KAEFkB,EAFE,OAGcF,mBAAS,IAHvB,mBAGRf,EAHQ,KAGAkB,EAHA,OAIwBH,mBAAS,IAJjC,mBAIRI,EAJQ,KAIKC,EAJL,OAK2BL,mBAAS,MALpC,mBAKRM,EALQ,KAKOC,EALP,KAmDhB,SAAS1B,EAAaM,EAAIH,GACrBwB,OAAOC,QAAP,0CAAkDzB,EAAlD,OACD0B,EAA2BvB,GACxBI,MAAK,SAAAE,GAAI,OAAIQ,EAAWrB,EAAQ+B,QAAO,SAAAC,GAAI,OAAIA,EAAKzB,KAAOA,SAC3D0B,OAAM,SAAAC,GACLC,EAAoB,YAAaD,EAAMtB,SAASC,SAKxD,SAASuB,EAAchC,GAA+B,IAAzBiC,EAAwB,uDAAN,KACzChC,EAASgC,EAQb,OANGhC,KACDA,EAASiC,MAAMC,KAAKlC,EAAOmC,aACpBC,OAAO,EAAE,EAAE,OAClBpC,EAASA,EAAOqC,KAAK,KAGhB,CAAEtC,OAAMC,UAGjB,SAAS8B,EAAoBQ,EAAWT,GACtCP,EAAiB,CAACiB,MAAOD,EAAWE,QAASX,EAAMY,QACnDC,YAAW,WACTpB,EAAiB,QAChB,KAkBL,OAxFAqB,qBAAW,WACTlB,IACGnB,MAAK,SAAAX,GAAO,OAAIqB,EAAWrB,MAC3BiC,OAAO,SAAAC,GAAK,OAAIC,EAAoB,YAAaD,QACnD,IAqFD,gCACE,2CAEmB,OAAlBR,EACG,mBAAGiB,UAAWjB,EAAckB,MAA5B,SAAoClB,EAAcmB,UAClD,6BAEJ,wCACA,yCACQ,uBAAOI,YAAY,eAAeC,MAAO1B,EAC/C2B,SAhBN,SAAgCC,GAC9BA,EAAMC,iBACN5B,EAAe2B,EAAME,OAAOJ,aAiB1B,gDACA,uBAAMK,SAjGV,SAAsBH,GAGpB,GAFAA,EAAMC,iBAEHrD,EAAQwD,MAAK,SAAArD,GAAM,OAAIA,EAAOC,KAAKqD,gBAAkBrD,EAAKqD,kBAgB/D,WACE,IAAIC,EAAUtB,EAAchC,EAAKC,GAE7BsD,EAAiB3D,EAAQ+B,QAC3B,SAAA5B,GAAM,OAAIA,EAAOC,KAAKqD,cAAcG,SAASxD,EAAKqD,kBAAgB,GAE/D7B,OAAOC,QAAP,UAAkBzB,EAAlB,kEACD0B,EAA2B6B,EAAepD,GAA1C,2BAAkDoD,GAAlD,IAAkEtD,OAAQqD,EAAQrD,UAC/EM,MAAK,SAAAX,GAAO,OACX8B,IACGnB,MAAK,SAAAX,GAAO,OAAIqB,EAAWrB,SAC/BiC,OAAM,SAAAC,GACLC,EAAoB,YAAaD,EAAMtB,SAASC,SAGxDS,EAAQ,IACRC,EAAU,IA/BRsC,OACK,CACL,IAAI1D,EAASiC,EAAchC,EAAMC,GAEjCyB,EAAA,2BAA+B3B,GAA/B,IAAuCI,GAAIuD,KAAKC,MAAsB,IAAhBD,KAAKE,aACxDrD,MAAK,SAAAsD,GAAc,OAAI5C,EAAWrB,EAAQkE,OAAOD,OACjDhC,OAAM,SAAAC,GACLC,EAAoB,YAAaD,EAAMtB,SAASC,SAGpDS,EAAQ,IACRC,EAAU,MAkFV,UACE,yCACQ,uBAAO0B,YAAY,gBAAgBC,MAAO9C,EAChD+C,SAjCR,SAAyBC,GACvBA,EAAMC,iBACN/B,EAAQ8B,EAAME,OAAOJ,aAiCjB,2CACU,uBAAOD,YAAY,kBAAkBC,MAAO7C,EACpD8C,SAhCR,SAAwBC,GACtBA,EAAMC,iBACN9B,EAAU6B,EAAME,OAAOJ,QA8BSiB,UAAU,UAEtC,8BACE,wBAAQC,KAAK,SAAb,sBAIJ,wCAEC5C,EACG,cAAC,EAAD,CAAYxB,QAAUA,EAAQ+B,QAAO,SAAA5B,GAAM,QACxCA,EAAOC,KAAKqD,cAAcG,SAASpC,EAAYiC,kBAEhDxD,aAAc,SAAAM,GAAE,OAAIN,EAAaM,MAEnC,cAAC,EAAD,CAAYP,QAASA,EAASC,aAAcA,SAMtDoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f8033251.chunk.js","sourcesContent":["import React from 'react';\n\nconst RecordList = ({records, deleteRecord}) => {\n  return (\n    <ul>\n    {\n      records.map(record => \n        <li key={record.name}>\n          {record.name} {record.number}\n          <button onClick={() => deleteRecord(record.id, record.name)}>\n            delete\n          </button>\n        </li>\n        )\n    }\n    </ul>\n  )\n}\n\nexport default RecordList;","import axios from 'axios';\nconst baseUrl = 'api/records';\n\n\nconst getRecords = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst createRecord = newRecord => { \n  return axios.post(baseUrl, newRecord).then(response => response.data)\n}\n\nconst updateRecord = (id, newData) => {\n  return axios.put(`${baseUrl}/${id}`, newData).then(response => response.data)\n}\n\nconst deleteRecord = (id) => {\n  return (axios.delete(`${baseUrl}/${id}`));\n}\n\nexport default { getRecords, createRecord, updateRecord, deleteRecord };","import React, { useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport RecordList from './components/RecordList';\nimport recordService from './services/recordService';\nimport './index.css';\n\nconst App = () => {\n  const [ records, setRecords ] = useState([]);\n  const [ name, setName ] = useState('');\n  const [ number, setNumber ] = useState('');\n  const [ filterValue, setFilterValue ] = useState('')\n  const [ statusMessage, setStatusMessage] = useState(null);\n\n  useEffect( () => {\n    recordService.getRecords()\n      .then(records => setRecords(records))\n      .catch( error => updateStatusMessage('statusBad', error));\n  }, [])\n\n  function createRecord(event) {\n    event.preventDefault();\n\n    if(records.some(record => record.name.toLowerCase() === name.toLowerCase())) {\n      updateRecord();\n    } else {\n      let record = recordFactory(name, number);\n\n      recordService.createRecord({...record, id: Math.floor(Math.random() * 10000)})\n        .then(returnedRecord => setRecords(records.concat(returnedRecord)))\n        .catch(error => { \n          updateStatusMessage('statusBad', error.response.data)\n        })\n\n      setName('');\n      setNumber('');\n    }\n  }\n\n  function updateRecord() {\n    let tempObj = recordFactory(name,number);\n\n    let recordToUpdate = records.filter( \n      record => record.name.toLowerCase().includes(name.toLowerCase()))[0]\n\n      if(window.confirm(`${name} already exists. Do you want to replace the existing number?`)) {\n        recordService.updateRecord(recordToUpdate.id, {...recordToUpdate, number: tempObj.number})\n          .then(records => \n            recordService.getRecords()\n              .then(records => setRecords(records)))\n          .catch(error => { \n            updateStatusMessage('statusBad', error.response.data)\n          });\n      }\n    setName('');\n    setNumber('');\n  }\n\n  function deleteRecord(id, name) {\n    if(window.confirm(`Are you sure you want to delete ${name}?`)) {\n      recordService.deleteRecord(id)\n        .then(data => setRecords(records.filter(each => each.id !== id)))\n        .catch(error => { \n          updateStatusMessage('statusBad', error.response.data)\n        });\n    }\n  }\n\n  function recordFactory(name, numberFromState = null) {\n    let number = numberFromState\n\n    if(number) {\n      number = Array.from(number.toString());\n      number.splice(3,0,' - ');\n      number = number.join('');\n    }\n\n    return { name, number }\n  }\n\n  function updateStatusMessage(className, error) {\n    setStatusMessage({class: className, message: error.Error});\n    setTimeout(() => {\n      setStatusMessage(null)\n    }, 5000);\n  }\n\n  function handleNameInput(event) {\n    event.preventDefault();\n    setName(event.target.value);\n  }\n\n  function handleNumInput(event) {\n    event.preventDefault();\n    setNumber(event.target.value);\n  }\n\n  function handleFilterValueInput(event) {\n    event.preventDefault();\n    setFilterValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      {\n      (statusMessage !== null)\n        ? <p className={statusMessage.class}>{statusMessage.message}</p>\n        : <></>\n      }\n      <h2>Filter</h2>\n      <div>\n        name: <input placeholder='Filter by...' value={filterValue} \n        onChange={handleFilterValueInput} />\n      </div>\n\n      <h2>Add new record</h2>\n      <form onSubmit={createRecord} >\n        <div>\n          name: <input placeholder='enter name...' value={name} \n          onChange={handleNameInput} />\n        </div>\n        <div>\n          number: <input placeholder='enter number...' value={number} \n          onChange={handleNumInput} maxLength='10' />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n      <h2>People</h2>\n      {\n      (filterValue)\n        ? <RecordList records={ records.filter(record => \n            (record.name.toLowerCase().includes(filterValue.toLowerCase())) \n              ? true : false) }\n            deleteRecord={id => deleteRecord(id)}\n          />       \n        : <RecordList records={records} deleteRecord={deleteRecord}/>\n      }\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}