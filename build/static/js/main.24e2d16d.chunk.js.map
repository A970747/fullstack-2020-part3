{"version":3,"sources":["components/RecordList.jsx","services/recordService.jsx","index.js"],"names":["RecordList","records","deleteRecord","map","record","name","number","onClick","id","baseUrl","axios","get","then","response","data","newRecord","post","newData","put","delete","App","useState","setRecords","setName","setNumber","filterValue","setFilterValue","window","confirm","recordService","filter","each","catch","error","console","log","recordFactory","numberFromState","Array","from","toString","splice","join","useEffect","placeholder","value","onChange","event","preventDefault","target","onSubmit","some","toLowerCase","tempObj","recordToUpdate","includes","updateRecord","returnedRecord","concat","maxLength","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24e2d16d.chunk.js","sourcesContent":["import React from 'react';\n\nconst RecordList = ({records, deleteRecord}) => {\n  return (\n    <ul>\n    {\n      records.map(record => \n        <li key={record.name}>\n          {record.name} {record.number}\n          <button onClick={() => deleteRecord(record.id, record.name)}>\n            delete\n          </button>\n        </li>\n        )\n    }\n    </ul>\n  )\n}\n\nexport default RecordList;","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/records';\n\n\nconst getRecords = () => {\n  return axios.get(baseUrl).then(response => response.data);\n}\n\nconst createRecord = newRecord => { \n  return axios.post(baseUrl, newRecord).then(response => response.data)\n}\n\nconst updateRecord = (id, newData) => {\n  return axios.put(`${baseUrl}/${id}`, newData).then(response => response.data)\n}\n\nconst deleteRecord = (id) => {\n  return (axios.delete(`${baseUrl}/${id}`));\n}\n\nexport default { getRecords, createRecord, updateRecord, deleteRecord };","import React, { useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport RecordList from './components/RecordList';\nimport recordService from './services/recordService';\nimport './index.css';\n\nconst App = () => {\n  const [ records, setRecords ] = useState([]);\n  const [ name, setName ] = useState('');\n  const [ number, setNumber ] = useState('');\n  const [ filterValue, setFilterValue ] = useState('')\n\n  useEffect( () => {\n    recordService.getRecords()\n      .then(records => setRecords(records))\n      .catch( error => console.log(error));\n  }, [])\n\n  function createRecord(event) {\n    event.preventDefault();\n\n    if(records.some(each => each.name.toLowerCase() === name.toLowerCase())) {\n      updateRecord();\n    }\n    else {\n      let record = recordFactory(name, number);\n\n      recordService.createRecord(record)\n        .then(returnedRecord => setRecords(records.concat(returnedRecord)))\n\n      setName('');\n      setNumber('');\n    }\n  }\n\n  function updateRecord() {\n    let tempObj = recordFactory(name,number);\n\n    let recordToUpdate = records.filter( \n      record => record.name.toLowerCase().includes(name.toLowerCase()))[0]\n\n      if(window.confirm(`${name} already exists. Do you want to replace the existing number?`)) {\n        recordService.updateRecord(recordToUpdate.id, {...recordToUpdate, number: tempObj.number})\n          .then(records => \n            recordService.getRecords()\n              .then(records => setRecords(records)))\n          .catch(error => console.log(error));\n      }\n    setName('');\n    setNumber('');\n  }\n\n  function deleteRecord(id, name) {\n    if(window.confirm(`Are you sure you want to delete ${name}?`)) {\n      recordService.deleteRecord(id)\n        .then(data => setRecords(records.filter(each => each.id !== id)))\n        .catch(error => console.log(error));\n    }\n  }\n\n  function recordFactory(name, numberFromState = null) {\n    let number = numberFromState\n\n    if(number) {\n      number = Array.from(number.toString());\n      number.splice(3,0,' - ');\n      number = number.join('');\n    }\n\n    return { name, number }\n  }\n\n  function handleNameInput(event) {\n    event.preventDefault();\n    setName(event.target.value);\n  }\n\n  function handleNumInput(event) {\n    event.preventDefault();\n    setNumber(event.target.value);\n  }\n\n  function handleFilterValueInput(event) {\n    event.preventDefault();\n    setFilterValue(event.target.value);\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <h2>Filter</h2>\n      <div>\n        name: <input placeholder='Filter by...' value={filterValue} \n        onChange={handleFilterValueInput} />\n      </div>\n\n      <h2>Add new record</h2>\n      <form onSubmit={createRecord} >\n        <div>\n          name: <input placeholder='enter name...' value={name} \n          onChange={handleNameInput} />\n        </div>\n        <div>\n          number: <input placeholder='enter number...' value={number} \n          onChange={handleNumInput} maxLength='10' />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n      <h2>People</h2>\n      {\n      (filterValue)\n        ? <RecordList records={ records.filter(record => \n            (record.name.toLowerCase().includes(filterValue.toLowerCase())) \n              ? true : false) }\n            deleteRecord={id => deleteRecord(id)}\n          />       \n        : <RecordList records={records} deleteRecord={deleteRecord}/>\n      }\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}